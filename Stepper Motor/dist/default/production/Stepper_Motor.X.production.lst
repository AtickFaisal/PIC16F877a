

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Feb 12 22:33:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.05
    12                           ; Generated 20/12/2018 GMT
    13                           ; 
    14                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0007                     _PORTC	set	7
   166  0087                     _TRISC	set	135
   167                           
   168                           ; #config settings
   169  0000                     
   170                           	psect	cinit
   171  07FC                     start_initialization:	
   172  07FC                     __initialization:	
   173  07FC                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176  07FC                     __end_of__initialization:	
   177  07FC  0183               	clrf	3
   178  07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	cstackCOMMON
   181  0070                     __pcstackCOMMON:	
   182  0070                     ?__init:	
   183  0070                     ??__init:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     ?_rotate_motor:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ??_rotate_motor:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ?_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197  0070                     	ds	2
   198  0072                     ??_main:	
   199                           
   200                           	psect	maintext
   201  0795                     __pmaintext:	
   202                           ; 1 bytes @ 0x2
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 34 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, pclath, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : B00/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   222 ;;      Params:         0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called:    1
   228 ;; This function calls:
   229 ;;		__init
   230 ;;		_rotate_motor
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  0795                     _main:	
   239                           
   240                           ;main.c: 35:     _init();
   241                           
   242                           ;incstack = 0
   243                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   244  0795  120A  118A  278E  120A  118A  	fcall	__init
   245  079A                     l618:	
   246                           
   247                           ;main.c: 37:         rotate_motor();
   248  079A  120A  118A  27A0  120A  118A  	fcall	_rotate_motor
   249  079F  2F9A               	goto	l618
   250  07A0                     __end_of_main:	
   251                           
   252                           	psect	text1
   253  07A0                     __ptext1:	
   254 ;; *************** function _rotate_motor *****************
   255 ;; Defined at:
   256 ;;		line 17 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _rotate_motor
   285  07A0                     _rotate_motor:	
   286                           
   287                           ;main.c: 18:     PORTC = 0b00000001;
   288                           
   289                           ;incstack = 0
   290                           ; Regs used in _rotate_motor: [wreg]
   291  07A0  3001               	movlw	1
   292  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   293  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   294  07A3  0087               	movwf	7	;volatile
   295                           
   296                           ;main.c: 19:     _delay((unsigned long)((40)*(16000000/4000.0)));
   297  07A4  30D0               	movlw	208
   298  07A5  00F1               	movwf	??_rotate_motor+1
   299  07A6  30C9               	movlw	201
   300  07A7  00F0               	movwf	??_rotate_motor
   301  07A8                     u17:	
   302  07A8  0BF0               	decfsz	??_rotate_motor,f
   303  07A9  2FA8               	goto	u17
   304  07AA  0BF1               	decfsz	??_rotate_motor+1,f
   305  07AB  2FA8               	goto	u17
   306  07AC  2FAD               	nop2
   307                           
   308                           ;main.c: 20:     PORTC = 0b00000011;
   309  07AD  3003               	movlw	3
   310  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   311  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   312  07B0  0087               	movwf	7	;volatile
   313                           
   314                           ;main.c: 21:     _delay((unsigned long)((40)*(16000000/4000.0)));
   315  07B1  30D0               	movlw	208
   316  07B2  00F1               	movwf	??_rotate_motor+1
   317  07B3  30C9               	movlw	201
   318  07B4  00F0               	movwf	??_rotate_motor
   319  07B5                     u27:	
   320  07B5  0BF0               	decfsz	??_rotate_motor,f
   321  07B6  2FB5               	goto	u27
   322  07B7  0BF1               	decfsz	??_rotate_motor+1,f
   323  07B8  2FB5               	goto	u27
   324  07B9  2FBA               	nop2
   325                           
   326                           ;main.c: 22:     PORTC = 0b00000010;
   327  07BA  3002               	movlw	2
   328  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   329  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   330  07BD  0087               	movwf	7	;volatile
   331                           
   332                           ;main.c: 23:     _delay((unsigned long)((40)*(16000000/4000.0)));
   333  07BE  30D0               	movlw	208
   334  07BF  00F1               	movwf	??_rotate_motor+1
   335  07C0  30C9               	movlw	201
   336  07C1  00F0               	movwf	??_rotate_motor
   337  07C2                     u37:	
   338  07C2  0BF0               	decfsz	??_rotate_motor,f
   339  07C3  2FC2               	goto	u37
   340  07C4  0BF1               	decfsz	??_rotate_motor+1,f
   341  07C5  2FC2               	goto	u37
   342  07C6  2FC7               	nop2
   343                           
   344                           ;main.c: 24:     PORTC = 0b00000110;
   345  07C7  3006               	movlw	6
   346  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   347  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   348  07CA  0087               	movwf	7	;volatile
   349                           
   350                           ;main.c: 25:     _delay((unsigned long)((40)*(16000000/4000.0)));
   351  07CB  30D0               	movlw	208
   352  07CC  00F1               	movwf	??_rotate_motor+1
   353  07CD  30C9               	movlw	201
   354  07CE  00F0               	movwf	??_rotate_motor
   355  07CF                     u47:	
   356  07CF  0BF0               	decfsz	??_rotate_motor,f
   357  07D0  2FCF               	goto	u47
   358  07D1  0BF1               	decfsz	??_rotate_motor+1,f
   359  07D2  2FCF               	goto	u47
   360  07D3  2FD4               	nop2
   361                           
   362                           ;main.c: 26:     PORTC = 0b00000100;
   363  07D4  3004               	movlw	4
   364  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   365  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   366  07D7  0087               	movwf	7	;volatile
   367                           
   368                           ;main.c: 27:     _delay((unsigned long)((40)*(16000000/4000.0)));
   369  07D8  30D0               	movlw	208
   370  07D9  00F1               	movwf	??_rotate_motor+1
   371  07DA  30C9               	movlw	201
   372  07DB  00F0               	movwf	??_rotate_motor
   373  07DC                     u57:	
   374  07DC  0BF0               	decfsz	??_rotate_motor,f
   375  07DD  2FDC               	goto	u57
   376  07DE  0BF1               	decfsz	??_rotate_motor+1,f
   377  07DF  2FDC               	goto	u57
   378  07E0  2FE1               	nop2
   379                           
   380                           ;main.c: 28:     PORTC = 0b00001100;
   381  07E1  300C               	movlw	12
   382  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   383  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   384  07E4  0087               	movwf	7	;volatile
   385                           
   386                           ;main.c: 29:     _delay((unsigned long)((40)*(16000000/4000.0)));
   387  07E5  30D0               	movlw	208
   388  07E6  00F1               	movwf	??_rotate_motor+1
   389  07E7  30C9               	movlw	201
   390  07E8  00F0               	movwf	??_rotate_motor
   391  07E9                     u67:	
   392  07E9  0BF0               	decfsz	??_rotate_motor,f
   393  07EA  2FE9               	goto	u67
   394  07EB  0BF1               	decfsz	??_rotate_motor+1,f
   395  07EC  2FE9               	goto	u67
   396  07ED  2FEE               	nop2
   397                           
   398                           ;main.c: 30:     PORTC = 0b00001000;
   399  07EE  3008               	movlw	8
   400  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   401  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   402  07F1  0087               	movwf	7	;volatile
   403                           
   404                           ;main.c: 31:     _delay((unsigned long)((40)*(16000000/4000.0)));
   405  07F2  30D0               	movlw	208
   406  07F3  00F1               	movwf	??_rotate_motor+1
   407  07F4  30C9               	movlw	201
   408  07F5  00F0               	movwf	??_rotate_motor
   409  07F6                     u77:	
   410  07F6  0BF0               	decfsz	??_rotate_motor,f
   411  07F7  2FF6               	goto	u77
   412  07F8  0BF1               	decfsz	??_rotate_motor+1,f
   413  07F9  2FF6               	goto	u77
   414  07FA  2FFB               	nop2
   415  07FB  0008               	return
   416  07FC                     __end_of_rotate_motor:	
   417                           
   418                           	psect	text2
   419  078E                     __ptext2:	
   420 ;; *************** function __init *****************
   421 ;; Defined at:
   422 ;;		line 12 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function __init
   451  078E                     __init:	
   452                           
   453                           ;main.c: 13:     TRISC = 0x00;
   454                           
   455                           ;incstack = 0
   456                           ; Regs used in __init: [status,2]
   457  078E  1683               	bsf	3,5	;RP0=1, select bank1
   458  078F  1303               	bcf	3,6	;RP1=0, select bank1
   459  0790  0187               	clrf	7	;volatile
   460                           
   461                           ;main.c: 14:     PORTC = 0x00;
   462  0791  1283               	bcf	3,5	;RP0=0, select bank0
   463  0792  1303               	bcf	3,6	;RP1=0, select bank0
   464  0793  0187               	clrf	7	;volatile
   465  0794  0008               	return
   466  0795                     __end_of__init:	
   467  007E                     btemp	set	126	;btemp
   468  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_rotate_motor

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              __init
                       _rotate_motor
 ---------------------------------------------------------------------------------
 (1) _rotate_motor                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) __init                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __init
   _rotate_motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Feb 12 22:33:07 2019

            __CFG_CP$OFF 0000                       u17 07A8                       u27 07B5  
                     u37 07C2                       u47 07CF                       u57 07DC  
                     u67 07E9                       u77 07F6                      l618 079A  
           __CFG_CPD$OFF 0000             _rotate_motor 07A0             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 0795  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTC 0007  
                  _TRISC 0087                    __init 078E                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07A0  
                 ??_main 0072                   ?__init 0070           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of__init 0795  
                ??__init 0070               __pmaintext 0795                  __ptext1 07A0  
                __ptext2 078E     end_of_initialization 07FC            ?_rotate_motor 0070  
    start_initialization 07FC           ??_rotate_motor 0070                ___latbits 0002  
         __size_of__init 0007     __end_of_rotate_motor 07FC            __size_of_main 000B  
  __size_of_rotate_motor 005C  
