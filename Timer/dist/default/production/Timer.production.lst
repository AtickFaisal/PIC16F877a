

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb  2 18:55:24 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0007                     _PORTC	set	7
   169  000E                     _TMR1L	set	14
   170  000F                     _TMR1H	set	15
   171  0080                     _TMR1ON	set	128
   172  0081                     _TMR1CS	set	129
   173  0085                     _T1CKPS1	set	133
   174  0084                     _T1CKPS0	set	132
   175  0060                     _TMR1IF	set	96
   176  005E                     _PEIE	set	94
   177  005F                     _GIE	set	95
   178  0087                     _TRISC	set	135
   179  0460                     _TMR1IE	set	1120
   180                           
   181                           ; #config settings
   182  0000                     
   183                           	psect	cinit
   184  000F                     start_initialization:	
   185  000F                     __initialization:	
   186                           
   187                           ; Clear objects allocated to COMMON
   188  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   189  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   190  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   191  0012                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194  0012                     __end_of__initialization:	
   195  0012  0183               	clrf	3
   196  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMMON
   199  0070                     __pbssCOMMON:	
   200  0070                     _count:	
   201  0070                     	ds	2
   202  0072                     _state:	
   203  0072                     	ds	1
   204                           
   205                           	psect	cstackCOMMON
   206  0073                     __pcstackCOMMON:	
   207  0073                     ?___init_interrupt__:	
   208  0073                     ?___init_timer__:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0073                     ?_isr:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0073                     ??_isr:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0073                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220                           
   221                           ; 1 bytes @ 0x0
   222  0073                     	ds	2
   223  0075                     ??___init_interrupt__:	
   224  0075                     ??___init_timer__:	
   225                           ; 1 bytes @ 0x2
   226                           
   227  0075                     ??_main:	
   228                           ; 1 bytes @ 0x2
   229                           
   230                           
   231                           ; 1 bytes @ 0x2
   232  0075                     	ds	1
   233                           
   234                           	psect	maintext
   235  0016                     __pmaintext:	
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 47 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : B00/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   255 ;;      Params:         0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0
   257 ;;      Temps:          1       0       0       0       0
   258 ;;      Totals:         1       0       0       0       0
   259 ;;Total ram usage:        1 bytes
   260 ;; Hardware stack levels required when called:    2
   261 ;; This function calls:
   262 ;;		___init_interrupt__
   263 ;;		___init_timer__
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _main
   271  0016                     _main:	
   272                           
   273                           ;main.c: 48:     TRISC &= ~(1 << 1);
   274                           
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   277  0016  30FD               	movlw	253
   278  0017  00F5               	movwf	??_main
   279  0018  0875               	movf	??_main,w
   280  0019  1683               	bsf	3,5	;RP0=1, select bank1
   281  001A  1303               	bcf	3,6	;RP1=0, select bank1
   282  001B  0587               	andwf	7,f	;volatile
   283                           
   284                           ;main.c: 49:     __init_interrupt__();
   285  001C  120A  118A  204A  120A  118A  	fcall	___init_interrupt__
   286                           
   287                           ;main.c: 50:     __init_timer__();
   288  0021  120A  118A  2053  120A  118A  	fcall	___init_timer__
   289  0026                     l45:	
   290                           ;main.c: 51:     while(1) {
   291                           
   292                           
   293                           ;main.c: 52:         if(count == 5) {
   294  0026  3005               	movlw	5
   295  0027  0670               	xorwf	_count,w
   296  0028  0471               	iorwf	_count+1,w
   297  0029  1D03               	btfss	3,2
   298  002A  2826               	goto	l45
   299                           
   300                           ;main.c: 53:             count = 0;
   301  002B  01F0               	clrf	_count
   302  002C  01F1               	clrf	_count+1
   303                           
   304                           ;main.c: 54:             PORTC ^= (1 << 1);
   305  002D  3002               	movlw	2
   306  002E  00F5               	movwf	??_main
   307  002F  0875               	movf	??_main,w
   308  0030  1283               	bcf	3,5	;RP0=0, select bank0
   309  0031  1303               	bcf	3,6	;RP1=0, select bank0
   310  0032  0687               	xorwf	7,f	;volatile
   311  0033  2826               	goto	l45
   312  0034                     __end_of_main:	
   313                           
   314                           	psect	text1
   315  0053                     __ptext1:	
   316 ;; *************** function ___init_timer__ *****************
   317 ;; Defined at:
   318 ;;		line 28 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		None
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; Hardware stack levels required when called:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           
   347                           ;psect for function ___init_timer__
   348  0053                     ___init_timer__:	
   349                           
   350                           ;main.c: 31:     T1CKPS0 = 1;
   351                           
   352                           ;incstack = 0
   353                           ; Regs used in ___init_timer__: []
   354  0053  1283               	bcf	3,5	;RP0=0, select bank0
   355  0054  1303               	bcf	3,6	;RP1=0, select bank0
   356  0055  1610               	bsf	16,4	;volatile
   357                           
   358                           ;main.c: 32:     T1CKPS1 = 1;
   359  0056  1690               	bsf	16,5	;volatile
   360                           
   361                           ;main.c: 33:     TMR1CS = 0;
   362  0057  1090               	bcf	16,1	;volatile
   363                           
   364                           ;main.c: 34:     TMR1ON = 1;
   365  0058  1410               	bsf	16,0	;volatile
   366  0059  0008               	return
   367  005A                     __end_of___init_timer__:	
   368                           
   369                           	psect	text2
   370  004A                     __ptext2:	
   371 ;; *************** function ___init_interrupt__ *****************
   372 ;; Defined at:
   373 ;;		line 18 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		None
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; Hardware stack levels required when called:    1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function ___init_interrupt__
   403  004A                     ___init_interrupt__:	
   404                           
   405                           ;main.c: 20:     GIE = 1;
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in ___init_interrupt__: []
   409  004A  178B               	bsf	11,7	;volatile
   410                           
   411                           ;main.c: 21:     PEIE = 1;
   412  004B  170B               	bsf	11,6	;volatile
   413                           
   414                           ;main.c: 23:     TMR1IE = 1;
   415  004C  1683               	bsf	3,5	;RP0=1, select bank1
   416  004D  1303               	bcf	3,6	;RP1=0, select bank1
   417  004E  140C               	bsf	12,0	;volatile
   418                           
   419                           ;main.c: 25:     TMR1IF = 0;
   420  004F  1283               	bcf	3,5	;RP0=0, select bank0
   421  0050  1303               	bcf	3,6	;RP1=0, select bank0
   422  0051  100C               	bcf	12,0	;volatile
   423  0052  0008               	return
   424  0053                     __end_of___init_interrupt__:	
   425                           
   426                           	psect	text3
   427  0034                     __ptext3:	
   428 ;; *************** function _isr *****************
   429 ;; Defined at:
   430 ;;		line 37 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0
   447 ;;      Totals:         2       0       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		Interrupt level 1
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _isr
   459  0034                     _isr:	
   460                           
   461                           ;main.c: 38:     if(TMR1IF==1) {
   462  0034  1283               	bcf	3,5	;RP0=0, select bank0
   463  0035  1303               	bcf	3,6	;RP1=0, select bank0
   464  0036  1C0C               	btfss	12,0	;volatile
   465  0037  2843               	goto	i1l40
   466                           
   467                           ;main.c: 39:         TMR1H=0x9E;
   468  0038  309E               	movlw	158
   469  0039  008F               	movwf	15	;volatile
   470                           
   471                           ;main.c: 40:         TMR1L=0x58;
   472  003A  3058               	movlw	88
   473  003B  008E               	movwf	14	;volatile
   474                           
   475                           ;main.c: 41:         TMR1IF=0;
   476  003C  100C               	bcf	12,0	;volatile
   477                           
   478                           ;main.c: 42:         count++;
   479  003D  3001               	movlw	1
   480  003E  07F0               	addwf	_count,f
   481  003F  1803               	skipnc
   482  0040  0AF1               	incf	_count+1,f
   483  0041  3000               	movlw	0
   484  0042  07F1               	addwf	_count+1,f
   485  0043                     i1l40:	
   486  0043  0874               	movf	??_isr+1,w
   487  0044  008A               	movwf	10
   488  0045  0E73               	swapf	??_isr^(0+4294967168),w
   489  0046  0083               	movwf	3
   490  0047  0EFE               	swapf	126,f
   491  0048  0E7E               	swapf	126,w
   492  0049  0009               	retfie
   493  004A                     __end_of_isr:	
   494  007E                     btemp	set	126	;btemp
   495  007E                     wtemp0	set	126
   496                           
   497                           	psect	intentry
   498  0004                     __pintentry:	
   499                           ;incstack = 0
   500                           ; Regs used in _isr: [wreg]
   501                           
   502  0004                     interrupt_function:	
   503  007E                     saved_w	set	btemp
   504  0004  00FE               	movwf	btemp
   505  0005  0E03               	swapf	3,w
   506  0006  00F3               	movwf	??_isr
   507  0007  080A               	movf	10,w
   508  0008  00F4               	movwf	??_isr+1
   509  0009  120A  118A  2834   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              2 COMMON     1     1      0
                 ___init_interrupt__
                     ___init_timer__
 ---------------------------------------------------------------------------------
 (1) ___init_timer__                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___init_interrupt__                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___init_interrupt__
   ___init_timer__

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb  2 18:55:24 2019

                __CFG_CP$OFF 0000                           l45 0026                          _GIE 005F  
               __CFG_CPD$OFF 0000                          _isr 0034                 __CFG_FOSC$HS 0000  
               __CFG_LVP$OFF 0000                         ?_isr 0073                         _PEIE 005E  
                       i1l40 0043                 __CFG_WRT$OFF 0000           ___init_interrupt__ 004A  
                       _main 0016                         btemp 007E                __CFG_BOREN$ON 0000  
                       start 000C      __size_of___init_timer__ 0007          ?___init_interrupt__ 0073  
                      ??_isr 0073                        ?_main 0073                __CFG_WDTE$OFF 0000  
                      _TMR1H 000F                        _TMR1L 000E                        _PORTC 0007  
                      _TRISC 0087         ??___init_interrupt__ 0075                        _count 0070  
                      _state 0072                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000F                 __end_of_main 0034  
                     ??_main 0075                       _TMR1IE 0460                       _TMR1IF 0060  
                     _TMR1CS 0081                       _TMR1ON 0080               __CFG_PWRTE$OFF 0000  
                     saved_w 007E      __end_of__initialization 0012               ___init_timer__ 0053  
             __pcstackCOMMON 0073       __end_of___init_timer__ 005A                   __pmaintext 0016  
                 __pintentry 0004                      _T1CKPS0 0084                      _T1CKPS1 0085  
            ?___init_timer__ 0073                      __ptext1 0053                      __ptext2 004A  
                    __ptext3 0034                 __size_of_isr 0016  __size_of___init_interrupt__ 0009  
       end_of_initialization 0012          start_initialization 000F                  __end_of_isr 004A  
                __pbssCOMMON 0070                    ___latbits 0002             ??___init_timer__ 0075  
          interrupt_function 0004   __end_of___init_interrupt__ 0053                __size_of_main 001E  
                   intlevel1 0000  
